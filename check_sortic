def ft_len(l):
    f = 0
    for i in l:
        f += 1
    return f
    
def RRb(m, st=-1):
    a = []
    d = ft_len(m)
    if st == 1:
        a.append(m[d-1])
        i = 0
        while i < ft_len(m)-1:
            a.append(m[i])
            i = i + 1
        return a
    if st == -1:
        i = 1
        while i < ft_len(m):
            a.append(m[i])
            i = i + 1
        a.append(m[0])
        return a

def RRa(m, st=-1):
    a = []
    d = ft_len(m)
    if st == 1:
        a.append(m[d-1])
        i = 0
        while i < ft_len(m)-1:
            a.append(m[i])
            i = i + 1
        return a
    if st == -1:
        i = 1
        while i < ft_len(m):
            a.append(m[i])
            i = i + 1
        a.append(m[0])
        return a

def shiftr(lst, steps):
    if steps < 0:
        steps = abs(steps)
        for i in range(steps):
            lst.append(lst.pop(0))
    else:
        for i in range(steps):
            lst.insert(0, lst.pop())
    return lst
    
def ft_s(m):
    m[0], m[1] = m[1], m[0]
    return m


def Ra(m, st=1):
    a = []
    d = ft_len(m)
    if st == 1:
        a.append(m[d-1])
        i = 0
        while i < ft_len(m)-1:
            a.append(m[i])
            i = i + 1
        return a
    if st == -1:
        i = 1
        while i < ft_len(m):
            a.append(m[i])
            i = i + 1
        a.append(m[0])
        return a

def Rb(m, st=1):
    a = []
    d = ft_len(m)
    if st == 1:
        a.append(m[d-1])
        i = 0
        while i < ft_len(m)-1:
            a.append(m[i])
            i = i + 1
        return a
    if st == -1:
        i = 1
        while i < ft_len(m):
            a.append(m[i])
            i = i + 1
        a.append(m[0])
        return a


def bigg(c):
    a = []
    b = []
    ot_k = []
    shag = []
    p = []
    q = []
    o = []
    while c != '!':
        c = int(c)
        a.append(c)
        c = input()
    p = a
    s = input()
    while s != '*':
        s = str(s)
        shag.append(s)
        s = input()
    for j in range(0, ft_len(a)):
        z = 0
        for i in range(0, ft_len(a)):
            if z < a[i]:
                z = a[i]
        if z > 0:
            b.append(z)
            for n in range(0, ft_len(a)):
                if a[n] == z:
                    a[n] = a[n] * 0
    for m in range(1, ft_len(b) + 1):
        ot_k.append(b[-m])
    for i in range(ft_len(shag)):
        if shag[i] == sa:
            p[0], p[1] = p[1], p[0]
        if shag[i] == sb:
            q[0], q[1] = q[1], q[0]
        if shag[i] == ss:
            p[0], p[1] = p[1], p[0]
            q[0], q[1] = q[1], q[0]
        if shag[i] == pa:
            p.append(q[0])
            p = shiftr(p, 1)
        if shag[i] == pb:
            q.append(p[0])
            q = shiftr(q, 1)
        if shag[i] == ra:
            p = Ra(p)
        if shag[i] == rb:
            q = Rb(q)
        if shag[i] == rr:
            p = Ra(p)
            q = Rb(q)
        if shag[i] == rra:
            p = RRa(p)
        if shag[i] == rrb:
            q = RRb(q)
        if shag[i] == rrr:
            p = RRa(p)
            q = RRb(q)
    if p == ot_k:
        print("OK")
    if p != ot_k:
        print("KO")
